/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ru.billing.client;

import ru.billing.exceptions.CatalogLoadException;
import ru.billing.exceptions.ItemAlreadyExistsException;
import ru.billing.stocklist.*;
import java.util.Date;

public class App {

    public static void main(String[] args) {
        GenericItem obj1 = new GenericItem(1, "bread", 1.2f, null, Category.FOOD);
        GenericItem obj2 = new GenericItem(2, "short", 2.2f, obj1, Category.DRESS);
        GenericItem obj3 = new GenericItem(3, "print", 3.2f, obj2, Category.PRINT);

        obj1.printAll();
        obj2.printAll();
        obj3.printAll();

        GenericItem[] items = { new FoodItem(4, "sup", 4.2f, null, Category.FOOD, new Date(), (short) 23),
                new TechicalItem(5, "key", 5.2f, null, Category.GENERAL, (short) 32) };

        for (GenericItem item : items) {
            item.printAll();
        }

        FoodItem foodObj1 = new FoodItem(6, "bread", 10f, null, Category.FOOD, new Date(), (short) 11);
        FoodItem foodObj2 = new FoodItem(7, "bread", 10f, null, Category.FOOD, new Date(), (short) 11);
        System.out.println(foodObj1.equals(foodObj2));

        var foodObj3 = foodObj1.clone();
        System.out.println(foodObj1.equals(foodObj3));

        var obj4 = obj2.clone();
        System.out.println(obj1.equals(obj4));

        var line = "Конфеты `Маска`;45;120";
        var item_fld = line.split(";");
        System.out.println("Массив, полученный из строк: " + java.util.Arrays.toString(item_fld));
        var foodItem = new FoodItem(item_fld[0], Float.parseFloat(item_fld[1]), null, Short.parseShort(item_fld[2]));

        System.out.println(foodItem);

        ItemCatalog itemCatalog = new ItemCatalog();
        try {

            itemCatalog.addItem(obj1);
            itemCatalog.addItem(obj2);
            itemCatalog.addItem(obj3);
            itemCatalog.addItem(foodObj1);
            itemCatalog.addItem(foodObj2);
        } catch (ItemAlreadyExistsException e) {
            e.printStackTrace();
        }

        long beginHT = new Date().getTime();
        for (int i = 0; i < 100000; i++) {
            itemCatalog.findItemByID(1);
        }
        long endHT = new Date().getTime();

        long beginAL = new Date().getTime();
        for (int i = 0; i < 100000; i++) {
            itemCatalog.findItemByID(1);
        }
        long endAL = new Date().getTime();

        System.out.println("In HashMap: " + (endHT - beginHT));
        System.out.println("In ArrayList: " + (endAL - beginAL));

        CatalogLoader loader = new CatalogStubLoader();
        try {

            loader.load(itemCatalog);
        } catch (CatalogLoadException e) {
            e.printStackTrace();
        }

        CatalogLoader fileLoader = new CatalogFileLoader("list.lst");
        try {
            fileLoader.load(itemCatalog);
        } catch (CatalogLoadException e) {
            e.printStackTrace();
        }

    }
}
